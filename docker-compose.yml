version: "3.3"
services:
  # api 
  api:
    build:
      context: .
    image: moleculer/demo
    env_file: docker-compose.env
    environment:
      SERVICES: api
      PORT: 3000
    depends_on:
      - nats
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-gw.rule=PathPrefix(`/`)"
      - "traefik.http.services.api-gw.loadbalancer.server.port=3000"
    networks:
      - internal

  # services 
  user:
    build:
      context: .
    image: moleculer/demo
    env_file: docker-compose.env
    environment:
      SERVICES: user

    depends_on:
      - nats
      - user-db
    networks:
      - internal

  post:
    build:
      context: .
    image: moleculer/demo
    env_file: docker-compose.env
    environment:
      SERVICES: post

    depends_on:
      - nats
      - post-db
    networks:
      - internal

  # db
  user-db:
    image: neo4j:latest
    container_name: user-db
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - ./docker/volumes/user/import:/import
      - ./docker/volumes/user/data:/data
    env_file: docker-compose.env
    networks:
      - internal

  post-db:
    image: mongo:latest
    container_name: post-db
    ports:
      - 5000:27017
    networks:
      - internal
  
  chat-db:
    image: mongo:latest
    container_name: chat-db
    ports:
      - 5002:27017
    networks:
      - internal

  # minio media storage
  media:
    image: quay.io/minio/minio
    container_name: media
    ports:
      - 9000:9000
      - 9090:9090
    env_file: docker-compose.env
    command: server /data --console-address ":9090"
    volumes:
      - ./docker/volumes/media/data:/data
    networks:
      - internal

  # transporter
  nats:
    image: nats:2
    ports:
      - 4222:4222
    networks:
      - internal

  # redis:
  #   image: redis:alpine
  #   networks:
  #     - internal

  traefik:
    image: traefik
    command:
      - "--api.insecure=true" # Don't do that in production!
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - 3000:80
      - 3001:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - internal
      - default

networks:
  internal:

volumes:
  data:
